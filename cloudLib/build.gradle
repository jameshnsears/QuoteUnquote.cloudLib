plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

apply from: '../jacoco.gradle'
apply plugin: 'kotlin-android'
apply from: '../ktlint.gradle'
apply from: '../detekt.gradle'
apply from: '../sonarcube.gradle'

def localPropertiesFile = file(project(':cloudLib').projectDir.path + "/local.properties")
def localProperties = new Properties()

if (!localPropertiesFile.exists()) {
    localProperties.setProperty("REMOTE_DEVICE_ENDPOINT_PRODUCTION", "")
    localProperties.setProperty("REMOTE_DEVICE_ENDPOINT_DEVELOPMENT", "")

    Writer writer = new FileWriter(localPropertiesFile, false)
    localProperties.store(writer, "empty, as creating the file is done manually via gpg")
    writer.close()
}

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 30

        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    lintOptions {
        abortOnError true
        warningsAsErrors false
        checkAllWarnings = true
        xmlReport false
        htmlReport true
    }

    buildTypes {
        def remoteDeviceEndpointProd = System.getenv("REMOTE_DEVICE_ENDPOINT_PRODUCTION")
        if (remoteDeviceEndpointProd == null) {
            Properties properties = new Properties()
            properties.load(project.file('local.properties').newDataInputStream())
            remoteDeviceEndpointProd = properties.getProperty('REMOTE_DEVICE_ENDPOINT_PRODUCTION')
        }

        def remoteDeviceEndpointDev = System.getenv("REMOTE_DEVICE_ENDPOINT_DEVELOPMENT")
        if (remoteDeviceEndpointDev == null) {
            Properties properties = new Properties()
            properties.load(project.file('local.properties').newDataInputStream())
            remoteDeviceEndpointDev = properties.getProperty('REMOTE_DEVICE_ENDPOINT_DEVELOPMENT')
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            buildConfigField("String", "REMOTE_DEVICE_ENDPOINT", "\"$remoteDeviceEndpointProd\"")
        }
        debug {
            buildConfigField("String", "REMOTE_DEVICE_ENDPOINT", "\"$remoteDeviceEndpointDev\"")
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    flavorDimensions 'Version'
    productFlavors {
        'fdroid' {
            dimension 'Version'
        }
        'fdroidS' {
            dimension 'Version'
        }
        'googleplay' {
            dimension 'Version'
        }
        'googleplayS' {
            dimension 'Version'
        }
        'emanuelkebede' {
            dimension 'Version'
        }
    }

    sourceSets {
        fdroid {
            java.srcDirs = ['src/main/java']
        }
        fdroidS {
            java.srcDirs = ['src/main/java']
        }
        googleplay {
            java.srcDirs = ['src/main/java']
        }
        googleplayS {
            java.srcDirs = ['src/main/java']
        }
        emanuelkebede {
            java.srcDirs = ['src/main/java']
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    fdroidSImplementation 'androidx.core:core-ktx:1.7.0'
    googleplaySImplementation 'androidx.core:core-ktx:1.7.0'
    implementation 'com.google.code.gson:gson:2.8.9'
    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.2'
    implementation 'org.conscrypt:conscrypt-android:2.5.2'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk7:1.6.0'

    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'io.mockk:mockk:1.12.0'
    testImplementation 'junit:junit:4.13.2'
}

repositories {
    mavenCentral()
}
